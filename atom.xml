<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Zkun]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-07-26T07:16:11.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[Zkun]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用factory_girl_seeds添加测试种子数据]]></title>
    <link href="http://yoursite.com/2015/07/26/post3/"/>
    <id>http://yoursite.com/2015/07/26/post3/</id>
    <published>2015-07-26T03:37:55.000Z</published>
    <updated>2015-07-26T07:16:11.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/post3.jpg" alt="head_image"><br>之前写过一篇创建测试的种子数据，但是那种方法有一些缺陷，所以现在改成使用factory_girl_seed来创建种子数据。<br><a id="more"></a></p>
<h3 id="原因">原因</h3><p>之前写过一篇创建测试种子文件的blog，虽然创建成功了，但是使用起来还是有些麻烦，因为数据创建，但是创建的数据没有创建数据引用.<br>比如说创建了一个user 使用的时候还是要用User.find_by_email(..)等代码查询出来。我需要直接使用它。不想多写代码，怎们办那就要用到factory_girl_seeds。</p>
<h3 id="factory_girl_seeds使用">factory_girl_seeds使用</h3><p><a href="https://github.com/evrone/factory_girl-seeds" target="_blank" rel="external">factory_girl_seed的github首页</a></p>
<p>加入到gem</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">group <span class="symbol">:test</span> <span class="keyword">do</span></span><br><span class="line">  gem <span class="string">'factory_girl-seeds'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>创建数据的方式就为，当然数据在factories文件夹中已经写好模版</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">FactoryGirl::SeedGenerator</span>.create(<span class="symbol">:user</span>)</span><br></pre></td></tr></table></figure>
<h3 id="创建初始数据">创建初始数据</h3><p>新建一个文件，写上生成数据的代码，require到spec_helper.rb或者说是直接在spec_helper.rb最下面中创建一个方法</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> </span>create_test_date</span><br><span class="line">	<span class="constant">FactoryGirl::SeedGenerator</span>.create(<span class="symbol">:meta_user</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>在然后加上以下内容，before(:suite)是让他在整个测试开始前运行，搭配上DatabaseCleaner删除数据strategy使用的是struncation（<a href="http://stackoverflow.com/questions/10904996/difference-between-truncation-transaction-and-deletion-database-strategies" target="_blank" rel="external">各项strategy的区别</a>）</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">RSpec</span>.configure <span class="keyword">do</span> |config|</span><br><span class="line">  config.before(<span class="symbol">:suite</span>) <span class="keyword">do</span></span><br><span class="line">    <span class="constant">DatabaseCleaner</span>.clean_with(<span class="symbol">:truncation</span>)</span><br><span class="line">    create_test_data</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"> <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>完成后直接通过一下语句调用</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">FactoryGirl</span>.seed(<span class="symbol">:meta_user</span>)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/img/post3.jpg" alt="head_image"><br>之前写过一篇创建测试的种子数据，但是那种方法有一些缺陷，所以现在改成使用factory_girl_seed来创建种子数据。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[在ubuntu14.04下安装pptp vpn服务]]></title>
    <link href="http://yoursite.com/2015/07/18/post2/"/>
    <id>http://yoursite.com/2015/07/18/post2/</id>
    <published>2015-07-18T15:41:09.000Z</published>
    <updated>2015-07-26T03:48:42.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/post2.jpg" alt="head_image"><br>最近自己想搭一个vpn服务给手机用，网上一搜教程一大堆，但是也有一些坑，还好找到一个靠谱的搭建教程，以下就是我的搭建过程。<br><a id="more"></a></p>
<h3 id="需要">需要</h3><p>  一台能访问外网的服务器，还有。。。没有了。</p>
<p>  什么你没有服务器，好吧，买一个吧，推荐一个国外的<a href="https://bandwagonhost.com/cart.php?a=confproduct&amp;i=0" target="_blank" rel="external">vps</a>,因为只需要搭建一个vpn所以买个低配的就行了.</p>
<h3 id="开始">开始</h3><h5 id="第一步">第一步</h5><p>ssh上去，首先安装pptp<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install pptpd</span><br></pre></td></tr></table></figure></p>
<h5 id="第二步">第二步</h5><p>安装完后编辑pptp.conf配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/pptpd.conf</span><br></pre></td></tr></table></figure></p>
<p>在当前文件下写入以下配置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">option</span> /etc/ppp/pptpd-options                    <span class="comment">#指定PPP选项文件的位置</span></span><br><span class="line"><span class="built_in">debug</span>                                           <span class="comment">#启用调试模式</span></span><br><span class="line">localip <span class="number">192.168.0.1</span>                             <span class="comment">#VPN服务器的虚拟ip</span></span><br><span class="line">remoteip <span class="number">192.168.0.200</span>-<span class="number">238</span>,<span class="number">192.168.0.245</span>        <span class="comment">#分配给VPN客户端的虚拟ip</span></span><br></pre></td></tr></table></figure></p>
<h5 id="第三步">第三步</h5><p>编辑PPP选项配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ppp/pptpd-options</span><br></pre></td></tr></table></figure></p>
<p>写入以下配置<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">name pptpd                      <span class="comment">#pptpd服务的名称</span></span><br><span class="line">refuse-pap                      <span class="comment">#拒绝pap身份认证模式</span></span><br><span class="line">refuse-chap                     <span class="comment">#拒绝chap身份认证模式</span></span><br><span class="line">refuse-mschap                   <span class="comment">#拒绝mschap身份认证模式</span></span><br><span class="line"><span class="keyword">require</span>-mschap-v2               <span class="comment">#允许mschap-v2身份认证模式</span></span><br><span class="line"><span class="keyword">require</span>-mppe-<span class="number">128</span>                <span class="comment">#允许mppe 128位加密身份认证模式</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">8.8</span>                  <span class="comment">#使用Google DNS</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">4.4</span>                  <span class="comment">#使用Google DNS</span></span><br><span class="line">proxyarp                        <span class="comment">#arp代理</span></span><br><span class="line">debug                           <span class="comment">#调试模式</span></span><br><span class="line"><span class="keyword">dump</span>                            <span class="comment">#服务启动时打印出所有配置信息</span></span><br><span class="line">lock                            <span class="comment">#锁定TTY设备</span></span><br><span class="line">nobsdcomp                       <span class="comment">#禁用BSD压缩模式</span></span><br><span class="line">logfile /var/<span class="keyword">log</span>/pptpd.<span class="keyword">log</span>      <span class="comment">#输出日志文件位置</span></span><br></pre></td></tr></table></figure></p>
<h5 id="第四步">第四步</h5><p>建立你的vpn的账户,编辑用户配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ppp/chap-secrets</span><br></pre></td></tr></table></figure></p>
<p>添加的格式如下</p>
<p>#用户名  &nbsp;&nbsp;&nbsp; 服务类型  &nbsp;&nbsp;&nbsp; 密码 &nbsp;&nbsp;&nbsp;&nbsp;  分配的ip地址</p>
<p>test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1234&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</p>
<p>重启pptpd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service pptpd restart</span><br></pre></td></tr></table></figure></p>
<h5 id="第五步">第五步</h5><p>配置网络和路由规则 设置ipv4转发<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">'s/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g'</span> /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></p>
<p>sudo sysctl -p 使用这条命令的时候可能会报错<br>error: permission denied on key ‘net.nf_conntrack_max’</p>
<p>解决办法,运行完下面的命令后再执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm <span class="operator">-f</span> /sbin/modprobe</span><br><span class="line">ln <span class="operator">-s</span> /bin/<span class="literal">true</span> /sbin/modprobe</span><br><span class="line">rm <span class="operator">-f</span> /sbin/sysctl</span><br><span class="line">ln <span class="operator">-s</span> /bin/<span class="literal">true</span> /sbin/sysctl</span><br></pre></td></tr></table></figure></p>
<h5 id="第六步">第六步</h5><p>设置iptables, 首先是使用ifconfig来查询你的外网网卡是哪个，我这里是venen0,查看到你的网卡后将你的网卡名替换到下面的命令中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -t nat -A POSTROUTING <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -o venen0 -j MASQUERADE</span><br></pre></td></tr></table></figure>
<p>因为iptable的配置在服务器重启后都会重置，所以我们可以将当前的命令加入到/etc/rc.local中这样每次启动都会执行</p>
<h3 id="结束">结束</h3><p>搭建完成现在可以放心使用，如果发现可以连接上vpn但是访问不了外网，那就可能是第六步iptables的配置有问题，建议换个网卡名试试。</p>
<p>头图来自<a href="http://www.haiwaitoutiao.com/?p=328156" target="_blank" rel="external">海外头条</a> 侵删</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/img/post2.jpg" alt="head_image"><br>最近自己想搭一个vpn服务给手机用，网上一搜教程一大堆，但是也有一些坑，还好找到一个靠谱的搭建教程，以下就是我的搭建过程。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails rspec测试使用seed文件添加基本测试数据]]></title>
    <link href="http://yoursite.com/2015/07/16/first/"/>
    <id>http://yoursite.com/2015/07/16/first/</id>
    <published>2015-07-16T12:41:09.000Z</published>
    <updated>2015-07-18T16:40:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/post1.jpg" alt="head_image"><br>因为当初不写测试<br><a id="more"></a></p>
<p>参与了一个项目的制作，当时为了项目的速度，导致里面的脏代码太多，而且当时也没有写上测试，所以项目现在不能看。好吧是我写测试没有坚持下去。</p>
<p>现在开始重构代码了，补上测试，脏代码也要完全改过。好苦逼啊！不过自己挖的坑终究是要自己来填的。</p>
<h3 id="使用">使用</h3><p>项目model层的关系有些复杂，有的model是依赖一些model才能创建，往往创建一个对象会链锁反应需要创建一堆的对象，而且测试需要的对象所要的依赖大多都不相同。所以找了个办法使用了seeds文件在每次执行测试之前添加测试数据。</p>
<p>首先创建seed文件，当然你可以随便取名字只要.rb结尾</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rails_app_path/db/<span class="built_in">test</span>_seeds.rb</span><br></pre></td></tr></table></figure>
<p>然后打开你的spec_helper.rb文件加入以下内容<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">RSpec</span>.configure <span class="keyword">do</span> |config|</span><br><span class="line">  config.before(<span class="symbol">:suite</span>) <span class="keyword">do</span></span><br><span class="line">    load <span class="string">"<span class="subst">#&#123;<span class="constant">Rails</span>.root&#125;</span>/db/test_seeds.rb"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<p>然后你每次的运行测试之前都会将这个seeds文件先执行一遍。这时候你就可以使用DatabaseCleaner每次执行测试前将数据库内容清空</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/img/post1.jpg" alt="head_image"><br>因为当初不写测试<br>]]>
    
    </summary>
    
  </entry>
  
</feed>